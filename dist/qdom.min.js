function nr(o, i) {
  function e() {
    this.constructor = o;
  }
  e.prototype = i.prototype, o.prototype = new e();
}
function xe(o, i, e, l) {
  var c = Error.call(this, o);
  return Object.setPrototypeOf && Object.setPrototypeOf(c, xe.prototype), c.expected = i, c.found = e, c.location = l, c.name = "SyntaxError", c;
}
nr(xe, Error);
function Mt(o, i, e) {
  return e = e || " ", o.length > i ? o : (i -= o.length, e += e.repeat(i), o + e.slice(0, i));
}
xe.prototype.format = function(o) {
  var i = "Error: " + this.message;
  if (this.location) {
    var e = null, l;
    for (l = 0; l < o.length; l++)
      if (o[l].source === this.location.source) {
        e = o[l].text.split(/\r\n|\n|\r/g);
        break;
      }
    var c = this.location.start, E = this.location.source && typeof this.location.source.offset == "function" ? this.location.source.offset(c) : c, _ = this.location.source + ":" + E.line + ":" + E.column;
    if (e) {
      var S = this.location.end, H = Mt("", E.line.toString().length, " "), N = e[c.line - 1], y = c.line === S.line ? S.column : N.length + 1, I = y - c.column || 1;
      i += `
 --> ` + _ + `
` + H + ` |
` + E.line + " | " + N + `
` + H + " | " + Mt("", c.column - 1, " ") + Mt("", I, "^");
    } else
      i += `
 at ` + _;
  }
  return i;
};
xe.buildMessage = function(o, i) {
  var e = {
    literal: function(N) {
      return '"' + c(N.text) + '"';
    },
    class: function(N) {
      var y = N.parts.map(function(I) {
        return Array.isArray(I) ? E(I[0]) + "-" + E(I[1]) : E(I);
      });
      return "[" + (N.inverted ? "^" : "") + y.join("") + "]";
    },
    any: function() {
      return "any character";
    },
    end: function() {
      return "end of input";
    },
    other: function(N) {
      return N.description;
    }
  };
  function l(N) {
    return N.charCodeAt(0).toString(16).toUpperCase();
  }
  function c(N) {
    return N.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(y) {
      return "\\x0" + l(y);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(y) {
      return "\\x" + l(y);
    });
  }
  function E(N) {
    return N.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(y) {
      return "\\x0" + l(y);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(y) {
      return "\\x" + l(y);
    });
  }
  function _(N) {
    return e[N.type](N);
  }
  function S(N) {
    var y = N.map(_), I, K;
    if (y.sort(), y.length > 0) {
      for (I = 1, K = 1; I < y.length; I++)
        y[I - 1] !== y[I] && (y[K] = y[I], K++);
      y.length = K;
    }
    switch (y.length) {
      case 1:
        return y[0];
      case 2:
        return y[0] + " or " + y[1];
      default:
        return y.slice(0, -1).join(", ") + ", or " + y[y.length - 1];
    }
  }
  function H(N) {
    return N ? '"' + c(N) + '"' : "end of input";
  }
  return "Expected " + S(o) + " but " + H(i) + " found.";
};
function or(o, i) {
  i = i !== void 0 ? i : {};
  var e = {}, l = i.grammarSource, c = { start: d }, E = d, _ = "'", S = "*", H = '"', N = "DELETE", y = "FROM", I = ";", K = "DROP", me = "INSERT", J = "(", Me = ")", nt = "INTO", ot = "SELECT", it = "COUNT", ge = "SUM", $ = "MIN", ne = "MAX", _e = "AVG", at = "CREATE", ve = "TRIGGER", ye = "ON", Se = "EXECUTE", P = "UPDATE", Ne = "SET", Re = ",", we = "=", lt = /^[a-zA-Z0-9.#_\/[\]()>+=~:" \-]/, st = /^[^']/, ft = /^[^"]/, $e = /^[a-zA-Z0-9_\-]/, ct = /^[ \t\n\r]/, de = C("'", !1), D = pe([["a", "z"], ["A", "Z"], ["0", "9"], ".", "#", "_", "/", "[", "]", "(", ")", ">", "+", "=", "~", ":", '"', " ", "-"], !1, !1), ut = C("*", !1), x = pe(["'"], !0, !1), Pe = C('"', !1), O = pe(['"'], !0, !1), oe = pe([["a", "z"], ["A", "Z"], ["0", "9"], "_", "-"], !1, !1), Ue = At("whitespace"), Fe = pe([" ", "	", `
`, "\r"], !1, !1), ke = C("DELETE", !1), He = C("FROM", !1), Q = C(";", !1), ie = C("DROP", !1), ze = C("INSERT", !1), Y = C("(", !1), he = C(")", !1), Ge = C("INTO", !1), ae = C("SELECT", !1), Ce = C("COUNT", !1), Oe = C("SUM", !1), pt = C("MIN", !1), mt = C("MAX", !1), Rt = C("AVG", !1), We = C("CREATE", !1), le = C("TRIGGER", !1), ee = C("ON", !1), te = C("EXECUTE", !1), gt = C("UPDATE", !1), dt = C("SET", !1), Be = C(",", !1), qe = C("=", !1), ht = function(t) {
    return t.join("");
  }, be = function() {
    return "*";
  }, Le = function(t) {
    return t;
  }, X = function(t) {
    return t.join("");
  }, se = function(t) {
    return t.join("");
  }, Ye = function(t) {
    return t.join("");
  }, Xe = function(t, a) {
    return {
      type: "DELETE",
      target: t,
      from: a
    };
  }, Ct = function(t) {
    return {
      type: "DROP",
      target: t
    };
  }, Ie = function(t, a) {
    return {
      type: "INSERT",
      values: t,
      target: a
    };
  }, De = function(t, a, u) {
    return {
      type: "SELECT",
      func: t,
      target: a,
      from: u
    };
  }, Ot = function() {
    return "COUNT";
  }, Ee = function() {
    return "SUM";
  }, bt = function() {
    return "MIN";
  }, Lt = function() {
    return "MAX";
  }, M = function() {
    return "AVG";
  }, fe = function(t, a, u) {
    return {
      type: "CREATE_TRIGGER",
      event: t,
      target: a,
      statement: u
    };
  }, It = function(t, a) {
    return {
      type: "EXECUTE_TRIGGER",
      event: t,
      target: a
    };
  }, Et = function(t, a) {
    return {
      type: "UPDATE",
      target: t,
      entries: a
    };
  }, je = function(t, a) {
    return [t, ...a.map((u) => u[3])];
  }, Tt = function(t, a) {
    return { property: t, value: a };
  }, r = i.peg$currPos | 0, ce = [{ line: 1, column: 1 }], L = r, re = i.peg$maxFailExpected || [], m = i.peg$silentFails | 0, ue;
  if (i.startRule) {
    if (!(i.startRule in c))
      throw new Error(`Can't start parsing from rule "` + i.startRule + '".');
    E = c[i.startRule];
  }
  function C(t, a) {
    return { type: "literal", text: t, ignoreCase: a };
  }
  function pe(t, a, u) {
    return { type: "class", parts: t, inverted: a, ignoreCase: u };
  }
  function j() {
    return { type: "end" };
  }
  function At(t) {
    return { type: "other", description: t };
  }
  function Ve(t) {
    var a = ce[t], u;
    if (a)
      return a;
    if (t >= ce.length)
      u = ce.length - 1;
    else
      for (u = t; !ce[--u]; )
        ;
    for (a = ce[u], a = {
      line: a.line,
      column: a.column
    }; u < t; )
      o.charCodeAt(u) === 10 ? (a.line++, a.column = 1) : a.column++, u++;
    return ce[t] = a, a;
  }
  function Ze(t, a, u) {
    var s = Ve(t), T = Ve(a), A = {
      source: l,
      start: {
        offset: t,
        line: s.line,
        column: s.column
      },
      end: {
        offset: a,
        line: T.line,
        column: T.column
      }
    };
    return A;
  }
  function g(t) {
    r < L || (r > L && (L = r, re = []), re.push(t));
  }
  function Dt(t, a, u) {
    return new xe(
      xe.buildMessage(t, a),
      t,
      a,
      u
    );
  }
  function d() {
    var t;
    return t = B(), t === e && (t = F(), t === e && (t = Ke(), t === e && (t = w(), t === e && (t = k())))), t;
  }
  function n() {
    var t, a, u, s;
    if (t = r, o.charCodeAt(r) === 39 ? (a = _, r++) : (a = e, m === 0 && g(de)), a !== e) {
      if (u = [], s = o.charAt(r), lt.test(s) ? r++ : (s = e, m === 0 && g(D)), s !== e)
        for (; s !== e; )
          u.push(s), s = o.charAt(r), lt.test(s) ? r++ : (s = e, m === 0 && g(D));
      else
        u = e;
      u !== e ? (o.charCodeAt(r) === 39 ? (s = _, r++) : (s = e, m === 0 && g(de)), s !== e ? t = ht(u) : (r = t, t = e)) : (r = t, t = e);
    } else
      r = t, t = e;
    return t === e && (t = R()), t;
  }
  function f() {
    var t, a;
    return t = r, o.charCodeAt(r) === 42 ? (a = S, r++) : (a = e, m === 0 && g(ut)), a !== e && (a = be()), t = a, t === e && (t = r, a = n(), a !== e && (a = Le(a)), t = a), t;
  }
  function p() {
    var t, a, u, s;
    if (t = r, o.charCodeAt(r) === 39 ? (a = _, r++) : (a = e, m === 0 && g(de)), a !== e) {
      for (u = [], s = o.charAt(r), st.test(s) ? r++ : (s = e, m === 0 && g(x)); s !== e; )
        u.push(s), s = o.charAt(r), st.test(s) ? r++ : (s = e, m === 0 && g(x));
      o.charCodeAt(r) === 39 ? (s = _, r++) : (s = e, m === 0 && g(de)), s !== e ? t = X(u) : (r = t, t = e);
    } else
      r = t, t = e;
    if (t === e) {
      if (t = r, o.charCodeAt(r) === 34 ? (a = H, r++) : (a = e, m === 0 && g(Pe)), a !== e) {
        for (u = [], s = o.charAt(r), ft.test(s) ? r++ : (s = e, m === 0 && g(O)); s !== e; )
          u.push(s), s = o.charAt(r), ft.test(s) ? r++ : (s = e, m === 0 && g(O));
        o.charCodeAt(r) === 34 ? (s = H, r++) : (s = e, m === 0 && g(Pe)), s !== e ? t = se(u) : (r = t, t = e);
      } else
        r = t, t = e;
      t === e && (t = R());
    }
    return t;
  }
  function R() {
    var t, a, u;
    if (t = r, a = [], u = o.charAt(r), $e.test(u) ? r++ : (u = e, m === 0 && g(oe)), u !== e)
      for (; u !== e; )
        a.push(u), u = o.charAt(r), $e.test(u) ? r++ : (u = e, m === 0 && g(oe));
    else
      a = e;
    return a !== e && (a = Ye(a)), t = a, t;
  }
  function h() {
    var t, a;
    for (m++, t = [], a = o.charAt(r), ct.test(a) ? r++ : (a = e, m === 0 && g(Fe)); a !== e; )
      t.push(a), a = o.charAt(r), ct.test(a) ? r++ : (a = e, m === 0 && g(Fe));
    return m--, a = e, m === 0 && g(Ue), t;
  }
  function w() {
    var t, a, u, s, T, A;
    return t = r, o.substr(r, 6) === N ? (a = N, r += 6) : (a = e, m === 0 && g(ke)), a !== e ? (h(), u = f(), u !== e ? (h(), o.substr(r, 4) === y ? (s = y, r += 4) : (s = e, m === 0 && g(He)), s !== e ? (h(), T = n(), T !== e ? (h(), o.charCodeAt(r) === 59 ? (A = I, r++) : (A = e, m === 0 && g(Q)), A !== e ? t = Xe(u, T) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t === e && (t = r, o.substr(r, 4) === K ? (a = K, r += 4) : (a = e, m === 0 && g(ie)), a !== e ? (h(), u = n(), u !== e ? (h(), o.charCodeAt(r) === 59 ? (s = I, r++) : (s = e, m === 0 && g(Q)), s !== e ? t = Ct(u) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)), t;
  }
  function F() {
    var t, a, u, s, T, A, b, U;
    return t = r, o.substr(r, 6) === me ? (a = me, r += 6) : (a = e, m === 0 && g(ze)), a !== e ? (h(), u = p(), u === e && (u = r, o.charCodeAt(r) === 40 ? (s = J, r++) : (s = e, m === 0 && g(Y)), s !== e ? (T = B(), T !== e ? (o.charCodeAt(r) === 41 ? (A = Me, r++) : (A = e, m === 0 && g(he)), A !== e ? (s = [s, T, A], u = s) : (r = u, u = e)) : (r = u, u = e)) : (r = u, u = e)), u !== e ? (s = h(), o.substr(r, 4) === nt ? (T = nt, r += 4) : (T = e, m === 0 && g(Ge)), T !== e ? (A = h(), b = n(), b !== e ? (h(), o.charCodeAt(r) === 59 ? (U = I, r++) : (U = e, m === 0 && g(Q)), U !== e ? t = Ie(u, b) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t;
  }
  function B() {
    var t, a, u, s, T, A, b, U;
    return t = r, o.substr(r, 6) === ot ? (a = ot, r += 6) : (a = e, m === 0 && g(ae)), a !== e ? (h(), u = Te(), u !== e ? (h(), o.charCodeAt(r) === 40 ? (s = J, r++) : (s = e, m === 0 && g(Y)), s !== e ? (h(), T = f(), T !== e ? (h(), o.charCodeAt(r) === 41 ? (A = Me, r++) : (A = e, m === 0 && g(he)), A !== e ? (h(), o.substr(r, 4) === y ? (b = y, r += 4) : (b = e, m === 0 && g(He)), b !== e ? (h(), U = n(), U !== e ? (h(), o.charCodeAt(r) === 59 ? r++ : m === 0 && g(Q), t = De(u, T, U)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t;
  }
  function Te() {
    var t, a;
    return t = r, o.substr(r, 5) === it ? (a = it, r += 5) : (a = e, m === 0 && g(Ce)), a !== e && (a = Ot()), t = a, t === e && (t = r, o.substr(r, 3) === ge ? (a = ge, r += 3) : (a = e, m === 0 && g(Oe)), a !== e && (a = Ee()), t = a, t === e && (t = r, o.substr(r, 3) === $ ? (a = $, r += 3) : (a = e, m === 0 && g(pt)), a !== e && (a = bt()), t = a, t === e && (t = r, o.substr(r, 3) === ne ? (a = ne, r += 3) : (a = e, m === 0 && g(mt)), a !== e && (a = Lt()), t = a, t === e && (t = r, o.substr(r, 3) === _e ? (a = _e, r += 3) : (a = e, m === 0 && g(Rt)), a !== e && (a = M()), t = a)))), t;
  }
  function k() {
    var t, a, u, s, T, A, b, U;
    return t = r, o.substr(r, 6) === at ? (a = at, r += 6) : (a = e, m === 0 && g(We)), a !== e ? (h(), o.substr(r, 7) === ve ? (u = ve, r += 7) : (u = e, m === 0 && g(le)), u !== e ? (h(), s = R(), s !== e ? (h(), o.substr(r, 2) === ye ? (T = ye, r += 2) : (T = e, m === 0 && g(ee)), T !== e ? (h(), A = n(), A !== e ? (h(), o.substr(r, 7) === Se ? (b = Se, r += 7) : (b = e, m === 0 && g(te)), b !== e ? (h(), U = _t(), U !== e ? t = fe(s, A, U) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t === e && (t = r, o.substr(r, 7) === Se ? (a = Se, r += 7) : (a = e, m === 0 && g(te)), a !== e ? (h(), o.substr(r, 7) === ve ? (u = ve, r += 7) : (u = e, m === 0 && g(le)), u !== e ? (h(), s = R(), s !== e ? (h(), o.substr(r, 2) === ye ? (T = ye, r += 2) : (T = e, m === 0 && g(ee)), T !== e ? (h(), A = n(), A !== e ? (h(), o.charCodeAt(r) === 59 ? (b = I, r++) : (b = e, m === 0 && g(Q)), b !== e ? t = It(s, A) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)), t;
  }
  function _t() {
    var t;
    return t = w(), t === e && (t = Ke(), t === e && (t = F())), t;
  }
  function Ke() {
    var t, a, u, s, T, A;
    return t = r, o.substr(r, 6) === P ? (a = P, r += 6) : (a = e, m === 0 && g(gt)), a !== e ? (h(), u = n(), u !== e ? (h(), o.substr(r, 3) === Ne ? (s = Ne, r += 3) : (s = e, m === 0 && g(dt)), s !== e ? (h(), T = rr(), T !== e ? (h(), o.charCodeAt(r) === 59 ? (A = I, r++) : (A = e, m === 0 && g(Q)), A !== e ? t = Et(u, T) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t;
  }
  function rr() {
    var t, a, u, s, T, A, b, U;
    if (t = r, a = xt(), a !== e) {
      for (u = [], s = r, T = h(), o.charCodeAt(r) === 44 ? (A = Re, r++) : (A = e, m === 0 && g(Be)), A !== e ? (b = h(), U = xt(), U !== e ? (T = [T, A, b, U], s = T) : (r = s, s = e)) : (r = s, s = e); s !== e; )
        u.push(s), s = r, T = h(), o.charCodeAt(r) === 44 ? (A = Re, r++) : (A = e, m === 0 && g(Be)), A !== e ? (b = h(), U = xt(), U !== e ? (T = [T, A, b, U], s = T) : (r = s, s = e)) : (r = s, s = e);
      t = je(a, u);
    } else
      r = t, t = e;
    return t;
  }
  function xt() {
    var t, a, u, s, T, A, b;
    return t = r, a = R(), a !== e ? (h(), o.charCodeAt(r) === 61 ? (u = we, r++) : (u = e, m === 0 && g(qe)), u !== e ? (h(), s = p(), s === e && (s = r, o.charCodeAt(r) === 40 ? (T = J, r++) : (T = e, m === 0 && g(Y)), T !== e ? (A = B(), A !== e ? (o.charCodeAt(r) === 41 ? (b = Me, r++) : (b = e, m === 0 && g(he)), b !== e ? (T = [T, A, b], s = T) : (r = s, s = e)) : (r = s, s = e)) : (r = s, s = e)), s !== e ? t = Tt(a, s) : (r = t, t = e)) : (r = t, t = e)) : (r = t, t = e), t;
  }
  if (ue = E(), i.peg$library)
    return (
      /** @type {any} */
      {
        peg$result: ue,
        peg$currPos: r,
        peg$FAILED: e,
        peg$maxFailExpected: re,
        peg$maxFailPos: L
      }
    );
  if (ue !== e && r === o.length)
    return ue;
  throw ue !== e && r < o.length && g(j()), Dt(
    re,
    L < o.length ? o.charAt(L) : null,
    L < o.length ? Ze(L, L + 1) : Ze(L, L)
  );
}
/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */
const {
  entries: Kt,
  setPrototypeOf: zt,
  isFrozen: ir,
  getPrototypeOf: ar,
  getOwnPropertyDescriptor: lr
} = Object;
let {
  freeze: G,
  seal: q,
  create: Jt
} = Object, {
  apply: kt,
  construct: Ht
} = typeof Reflect < "u" && Reflect;
G || (G = function(i) {
  return i;
});
q || (q = function(i) {
  return i;
});
kt || (kt = function(i, e, l) {
  return i.apply(e, l);
});
Ht || (Ht = function(i, e) {
  return new i(...e);
});
const vt = W(Array.prototype.forEach), sr = W(Array.prototype.lastIndexOf), Gt = W(Array.prototype.pop), Je = W(Array.prototype.push), fr = W(Array.prototype.splice), St = W(String.prototype.toLowerCase), wt = W(String.prototype.toString), Wt = W(String.prototype.match), Qe = W(String.prototype.replace), cr = W(String.prototype.indexOf), ur = W(String.prototype.trim), Z = W(Object.prototype.hasOwnProperty), z = W(RegExp.prototype.test), et = pr(TypeError);
function W(o) {
  return function(i) {
    i instanceof RegExp && (i.lastIndex = 0);
    for (var e = arguments.length, l = new Array(e > 1 ? e - 1 : 0), c = 1; c < e; c++)
      l[c - 1] = arguments[c];
    return kt(o, i, l);
  };
}
function pr(o) {
  return function() {
    for (var i = arguments.length, e = new Array(i), l = 0; l < i; l++)
      e[l] = arguments[l];
    return Ht(o, e);
  };
}
function v(o, i) {
  let e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : St;
  zt && zt(o, null);
  let l = i.length;
  for (; l--; ) {
    let c = i[l];
    if (typeof c == "string") {
      const E = e(c);
      E !== c && (ir(i) || (i[l] = E), c = E);
    }
    o[c] = !0;
  }
  return o;
}
function mr(o) {
  for (let i = 0; i < o.length; i++)
    Z(o, i) || (o[i] = null);
  return o;
}
function Ae(o) {
  const i = Jt(null);
  for (const [e, l] of Kt(o))
    Z(o, e) && (Array.isArray(l) ? i[e] = mr(l) : l && typeof l == "object" && l.constructor === Object ? i[e] = Ae(l) : i[e] = l);
  return i;
}
function tt(o, i) {
  for (; o !== null; ) {
    const l = lr(o, i);
    if (l) {
      if (l.get)
        return W(l.get);
      if (typeof l.value == "function")
        return W(l.value);
    }
    o = ar(o);
  }
  function e() {
    return null;
  }
  return e;
}
const Bt = G(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), $t = G(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), Pt = G(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), gr = G(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), Ut = G(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), dr = G(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), qt = G(["#text"]), Yt = G(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), Ft = G(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), Xt = G(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), yt = G(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), hr = q(/\{\{[\w\W]*|[\w\W]*\}\}/gm), Er = q(/<%[\w\W]*|[\w\W]*%>/gm), Tr = q(/\$\{[\w\W]*/gm), Ar = q(/^data-[\-\w.\u00B7-\uFFFF]+$/), _r = q(/^aria-[\-\w]+$/), Qt = q(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), vr = q(/^(?:\w+script|data):/i), yr = q(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), er = q(/^html$/i), Sr = q(/^[a-z][.\w]*(-[.\w]+)+$/i);
var jt = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: _r,
  ATTR_WHITESPACE: yr,
  CUSTOM_ELEMENT: Sr,
  DATA_ATTR: Ar,
  DOCTYPE_NAME: er,
  ERB_EXPR: Er,
  IS_ALLOWED_URI: Qt,
  IS_SCRIPT_OR_DATA: vr,
  MUSTACHE_EXPR: hr,
  TMPLIT_EXPR: Tr
});
const rt = {
  element: 1,
  text: 3,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9
}, Nr = function() {
  return typeof window > "u" ? null : window;
}, Rr = function(i, e) {
  if (typeof i != "object" || typeof i.createPolicy != "function")
    return null;
  let l = null;
  const c = "data-tt-policy-suffix";
  e && e.hasAttribute(c) && (l = e.getAttribute(c));
  const E = "dompurify" + (l ? "#" + l : "");
  try {
    return i.createPolicy(E, {
      createHTML(_) {
        return _;
      },
      createScriptURL(_) {
        return _;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + E + " could not be created."), null;
  }
}, Vt = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function tr() {
  let o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Nr();
  const i = (d) => tr(d);
  if (i.version = "3.2.5", i.removed = [], !o || !o.document || o.document.nodeType !== rt.document || !o.Element)
    return i.isSupported = !1, i;
  let {
    document: e
  } = o;
  const l = e, c = l.currentScript, {
    DocumentFragment: E,
    HTMLTemplateElement: _,
    Node: S,
    Element: H,
    NodeFilter: N,
    NamedNodeMap: y = o.NamedNodeMap || o.MozNamedAttrMap,
    HTMLFormElement: I,
    DOMParser: K,
    trustedTypes: me
  } = o, J = H.prototype, Me = tt(J, "cloneNode"), nt = tt(J, "remove"), ot = tt(J, "nextSibling"), it = tt(J, "childNodes"), ge = tt(J, "parentNode");
  if (typeof _ == "function") {
    const d = e.createElement("template");
    d.content && d.content.ownerDocument && (e = d.content.ownerDocument);
  }
  let $, ne = "";
  const {
    implementation: _e,
    createNodeIterator: at,
    createDocumentFragment: ve,
    getElementsByTagName: ye
  } = e, {
    importNode: Se
  } = l;
  let P = Vt();
  i.isSupported = typeof Kt == "function" && typeof ge == "function" && _e && _e.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: Ne,
    ERB_EXPR: Re,
    TMPLIT_EXPR: we,
    DATA_ATTR: lt,
    ARIA_ATTR: st,
    IS_SCRIPT_OR_DATA: ft,
    ATTR_WHITESPACE: $e,
    CUSTOM_ELEMENT: ct
  } = jt;
  let {
    IS_ALLOWED_URI: de
  } = jt, D = null;
  const ut = v({}, [...Bt, ...$t, ...Pt, ...Ut, ...qt]);
  let x = null;
  const Pe = v({}, [...Yt, ...Ft, ...Xt, ...yt]);
  let O = Object.seal(Jt(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), oe = null, Ue = null, Fe = !0, ke = !0, He = !1, Q = !0, ie = !1, ze = !0, Y = !1, he = !1, Ge = !1, ae = !1, Ce = !1, Oe = !1, pt = !0, mt = !1;
  const Rt = "user-content-";
  let We = !0, le = !1, ee = {}, te = null;
  const gt = v({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let dt = null;
  const Be = v({}, ["audio", "video", "img", "source", "image", "track"]);
  let qe = null;
  const ht = v({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), be = "http://www.w3.org/1998/Math/MathML", Le = "http://www.w3.org/2000/svg", X = "http://www.w3.org/1999/xhtml";
  let se = X, Ye = !1, Xe = null;
  const Ct = v({}, [be, Le, X], wt);
  let Ie = v({}, ["mi", "mo", "mn", "ms", "mtext"]), De = v({}, ["annotation-xml"]);
  const Ot = v({}, ["title", "style", "font", "a", "script"]);
  let Ee = null;
  const bt = ["application/xhtml+xml", "text/html"], Lt = "text/html";
  let M = null, fe = null;
  const It = e.createElement("form"), Et = function(n) {
    return n instanceof RegExp || n instanceof Function;
  }, je = function() {
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(fe && fe === n)) {
      if ((!n || typeof n != "object") && (n = {}), n = Ae(n), Ee = // eslint-disable-next-line unicorn/prefer-includes
      bt.indexOf(n.PARSER_MEDIA_TYPE) === -1 ? Lt : n.PARSER_MEDIA_TYPE, M = Ee === "application/xhtml+xml" ? wt : St, D = Z(n, "ALLOWED_TAGS") ? v({}, n.ALLOWED_TAGS, M) : ut, x = Z(n, "ALLOWED_ATTR") ? v({}, n.ALLOWED_ATTR, M) : Pe, Xe = Z(n, "ALLOWED_NAMESPACES") ? v({}, n.ALLOWED_NAMESPACES, wt) : Ct, qe = Z(n, "ADD_URI_SAFE_ATTR") ? v(Ae(ht), n.ADD_URI_SAFE_ATTR, M) : ht, dt = Z(n, "ADD_DATA_URI_TAGS") ? v(Ae(Be), n.ADD_DATA_URI_TAGS, M) : Be, te = Z(n, "FORBID_CONTENTS") ? v({}, n.FORBID_CONTENTS, M) : gt, oe = Z(n, "FORBID_TAGS") ? v({}, n.FORBID_TAGS, M) : {}, Ue = Z(n, "FORBID_ATTR") ? v({}, n.FORBID_ATTR, M) : {}, ee = Z(n, "USE_PROFILES") ? n.USE_PROFILES : !1, Fe = n.ALLOW_ARIA_ATTR !== !1, ke = n.ALLOW_DATA_ATTR !== !1, He = n.ALLOW_UNKNOWN_PROTOCOLS || !1, Q = n.ALLOW_SELF_CLOSE_IN_ATTR !== !1, ie = n.SAFE_FOR_TEMPLATES || !1, ze = n.SAFE_FOR_XML !== !1, Y = n.WHOLE_DOCUMENT || !1, ae = n.RETURN_DOM || !1, Ce = n.RETURN_DOM_FRAGMENT || !1, Oe = n.RETURN_TRUSTED_TYPE || !1, Ge = n.FORCE_BODY || !1, pt = n.SANITIZE_DOM !== !1, mt = n.SANITIZE_NAMED_PROPS || !1, We = n.KEEP_CONTENT !== !1, le = n.IN_PLACE || !1, de = n.ALLOWED_URI_REGEXP || Qt, se = n.NAMESPACE || X, Ie = n.MATHML_TEXT_INTEGRATION_POINTS || Ie, De = n.HTML_INTEGRATION_POINTS || De, O = n.CUSTOM_ELEMENT_HANDLING || {}, n.CUSTOM_ELEMENT_HANDLING && Et(n.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (O.tagNameCheck = n.CUSTOM_ELEMENT_HANDLING.tagNameCheck), n.CUSTOM_ELEMENT_HANDLING && Et(n.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (O.attributeNameCheck = n.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), n.CUSTOM_ELEMENT_HANDLING && typeof n.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (O.allowCustomizedBuiltInElements = n.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), ie && (ke = !1), Ce && (ae = !0), ee && (D = v({}, qt), x = [], ee.html === !0 && (v(D, Bt), v(x, Yt)), ee.svg === !0 && (v(D, $t), v(x, Ft), v(x, yt)), ee.svgFilters === !0 && (v(D, Pt), v(x, Ft), v(x, yt)), ee.mathMl === !0 && (v(D, Ut), v(x, Xt), v(x, yt))), n.ADD_TAGS && (D === ut && (D = Ae(D)), v(D, n.ADD_TAGS, M)), n.ADD_ATTR && (x === Pe && (x = Ae(x)), v(x, n.ADD_ATTR, M)), n.ADD_URI_SAFE_ATTR && v(qe, n.ADD_URI_SAFE_ATTR, M), n.FORBID_CONTENTS && (te === gt && (te = Ae(te)), v(te, n.FORBID_CONTENTS, M)), We && (D["#text"] = !0), Y && v(D, ["html", "head", "body"]), D.table && (v(D, ["tbody"]), delete oe.tbody), n.TRUSTED_TYPES_POLICY) {
        if (typeof n.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw et('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof n.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw et('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        $ = n.TRUSTED_TYPES_POLICY, ne = $.createHTML("");
      } else
        $ === void 0 && ($ = Rr(me, c)), $ !== null && typeof ne == "string" && (ne = $.createHTML(""));
      G && G(n), fe = n;
    }
  }, Tt = v({}, [...$t, ...Pt, ...gr]), r = v({}, [...Ut, ...dr]), ce = function(n) {
    let f = ge(n);
    (!f || !f.tagName) && (f = {
      namespaceURI: se,
      tagName: "template"
    });
    const p = St(n.tagName), R = St(f.tagName);
    return Xe[n.namespaceURI] ? n.namespaceURI === Le ? f.namespaceURI === X ? p === "svg" : f.namespaceURI === be ? p === "svg" && (R === "annotation-xml" || Ie[R]) : !!Tt[p] : n.namespaceURI === be ? f.namespaceURI === X ? p === "math" : f.namespaceURI === Le ? p === "math" && De[R] : !!r[p] : n.namespaceURI === X ? f.namespaceURI === Le && !De[R] || f.namespaceURI === be && !Ie[R] ? !1 : !r[p] && (Ot[p] || !Tt[p]) : !!(Ee === "application/xhtml+xml" && Xe[n.namespaceURI]) : !1;
  }, L = function(n) {
    Je(i.removed, {
      element: n
    });
    try {
      ge(n).removeChild(n);
    } catch {
      nt(n);
    }
  }, re = function(n, f) {
    try {
      Je(i.removed, {
        attribute: f.getAttributeNode(n),
        from: f
      });
    } catch {
      Je(i.removed, {
        attribute: null,
        from: f
      });
    }
    if (f.removeAttribute(n), n === "is")
      if (ae || Ce)
        try {
          L(f);
        } catch {
        }
      else
        try {
          f.setAttribute(n, "");
        } catch {
        }
  }, m = function(n) {
    let f = null, p = null;
    if (Ge)
      n = "<remove></remove>" + n;
    else {
      const w = Wt(n, /^[\r\n\t ]+/);
      p = w && w[0];
    }
    Ee === "application/xhtml+xml" && se === X && (n = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + n + "</body></html>");
    const R = $ ? $.createHTML(n) : n;
    if (se === X)
      try {
        f = new K().parseFromString(R, Ee);
      } catch {
      }
    if (!f || !f.documentElement) {
      f = _e.createDocument(se, "template", null);
      try {
        f.documentElement.innerHTML = Ye ? ne : R;
      } catch {
      }
    }
    const h = f.body || f.documentElement;
    return n && p && h.insertBefore(e.createTextNode(p), h.childNodes[0] || null), se === X ? ye.call(f, Y ? "html" : "body")[0] : Y ? f.documentElement : h;
  }, ue = function(n) {
    return at.call(
      n.ownerDocument || n,
      n,
      // eslint-disable-next-line no-bitwise
      N.SHOW_ELEMENT | N.SHOW_COMMENT | N.SHOW_TEXT | N.SHOW_PROCESSING_INSTRUCTION | N.SHOW_CDATA_SECTION,
      null
    );
  }, C = function(n) {
    return n instanceof I && (typeof n.nodeName != "string" || typeof n.textContent != "string" || typeof n.removeChild != "function" || !(n.attributes instanceof y) || typeof n.removeAttribute != "function" || typeof n.setAttribute != "function" || typeof n.namespaceURI != "string" || typeof n.insertBefore != "function" || typeof n.hasChildNodes != "function");
  }, pe = function(n) {
    return typeof S == "function" && n instanceof S;
  };
  function j(d, n, f) {
    vt(d, (p) => {
      p.call(i, n, f, fe);
    });
  }
  const At = function(n) {
    let f = null;
    if (j(P.beforeSanitizeElements, n, null), C(n))
      return L(n), !0;
    const p = M(n.nodeName);
    if (j(P.uponSanitizeElement, n, {
      tagName: p,
      allowedTags: D
    }), n.hasChildNodes() && !pe(n.firstElementChild) && z(/<[/\w!]/g, n.innerHTML) && z(/<[/\w!]/g, n.textContent) || n.nodeType === rt.progressingInstruction || ze && n.nodeType === rt.comment && z(/<[/\w]/g, n.data))
      return L(n), !0;
    if (!D[p] || oe[p]) {
      if (!oe[p] && Ze(p) && (O.tagNameCheck instanceof RegExp && z(O.tagNameCheck, p) || O.tagNameCheck instanceof Function && O.tagNameCheck(p)))
        return !1;
      if (We && !te[p]) {
        const R = ge(n) || n.parentNode, h = it(n) || n.childNodes;
        if (h && R) {
          const w = h.length;
          for (let F = w - 1; F >= 0; --F) {
            const B = Me(h[F], !0);
            B.__removalCount = (n.__removalCount || 0) + 1, R.insertBefore(B, ot(n));
          }
        }
      }
      return L(n), !0;
    }
    return n instanceof H && !ce(n) || (p === "noscript" || p === "noembed" || p === "noframes") && z(/<\/no(script|embed|frames)/i, n.innerHTML) ? (L(n), !0) : (ie && n.nodeType === rt.text && (f = n.textContent, vt([Ne, Re, we], (R) => {
      f = Qe(f, R, " ");
    }), n.textContent !== f && (Je(i.removed, {
      element: n.cloneNode()
    }), n.textContent = f)), j(P.afterSanitizeElements, n, null), !1);
  }, Ve = function(n, f, p) {
    if (pt && (f === "id" || f === "name") && (p in e || p in It))
      return !1;
    if (!(ke && !Ue[f] && z(lt, f))) {
      if (!(Fe && z(st, f))) {
        if (!x[f] || Ue[f]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(Ze(n) && (O.tagNameCheck instanceof RegExp && z(O.tagNameCheck, n) || O.tagNameCheck instanceof Function && O.tagNameCheck(n)) && (O.attributeNameCheck instanceof RegExp && z(O.attributeNameCheck, f) || O.attributeNameCheck instanceof Function && O.attributeNameCheck(f)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            f === "is" && O.allowCustomizedBuiltInElements && (O.tagNameCheck instanceof RegExp && z(O.tagNameCheck, p) || O.tagNameCheck instanceof Function && O.tagNameCheck(p)))
          ) return !1;
        } else if (!qe[f]) {
          if (!z(de, Qe(p, $e, ""))) {
            if (!((f === "src" || f === "xlink:href" || f === "href") && n !== "script" && cr(p, "data:") === 0 && dt[n])) {
              if (!(He && !z(ft, Qe(p, $e, "")))) {
                if (p)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, Ze = function(n) {
    return n !== "annotation-xml" && Wt(n, ct);
  }, g = function(n) {
    j(P.beforeSanitizeAttributes, n, null);
    const {
      attributes: f
    } = n;
    if (!f || C(n))
      return;
    const p = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: x,
      forceKeepAttr: void 0
    };
    let R = f.length;
    for (; R--; ) {
      const h = f[R], {
        name: w,
        namespaceURI: F,
        value: B
      } = h, Te = M(w);
      let k = w === "value" ? B : ur(B);
      if (p.attrName = Te, p.attrValue = k, p.keepAttr = !0, p.forceKeepAttr = void 0, j(P.uponSanitizeAttribute, n, p), k = p.attrValue, mt && (Te === "id" || Te === "name") && (re(w, n), k = Rt + k), ze && z(/((--!?|])>)|<\/(style|title)/i, k)) {
        re(w, n);
        continue;
      }
      if (p.forceKeepAttr || (re(w, n), !p.keepAttr))
        continue;
      if (!Q && z(/\/>/i, k)) {
        re(w, n);
        continue;
      }
      ie && vt([Ne, Re, we], (Ke) => {
        k = Qe(k, Ke, " ");
      });
      const _t = M(n.nodeName);
      if (Ve(_t, Te, k)) {
        if ($ && typeof me == "object" && typeof me.getAttributeType == "function" && !F)
          switch (me.getAttributeType(_t, Te)) {
            case "TrustedHTML": {
              k = $.createHTML(k);
              break;
            }
            case "TrustedScriptURL": {
              k = $.createScriptURL(k);
              break;
            }
          }
        try {
          F ? n.setAttributeNS(F, w, k) : n.setAttribute(w, k), C(n) ? L(n) : Gt(i.removed);
        } catch {
        }
      }
    }
    j(P.afterSanitizeAttributes, n, null);
  }, Dt = function d(n) {
    let f = null;
    const p = ue(n);
    for (j(P.beforeSanitizeShadowDOM, n, null); f = p.nextNode(); )
      j(P.uponSanitizeShadowNode, f, null), At(f), g(f), f.content instanceof E && d(f.content);
    j(P.afterSanitizeShadowDOM, n, null);
  };
  return i.sanitize = function(d) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, f = null, p = null, R = null, h = null;
    if (Ye = !d, Ye && (d = "<!-->"), typeof d != "string" && !pe(d))
      if (typeof d.toString == "function") {
        if (d = d.toString(), typeof d != "string")
          throw et("dirty is not a string, aborting");
      } else
        throw et("toString is not a function");
    if (!i.isSupported)
      return d;
    if (he || je(n), i.removed = [], typeof d == "string" && (le = !1), le) {
      if (d.nodeName) {
        const B = M(d.nodeName);
        if (!D[B] || oe[B])
          throw et("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (d instanceof S)
      f = m("<!---->"), p = f.ownerDocument.importNode(d, !0), p.nodeType === rt.element && p.nodeName === "BODY" || p.nodeName === "HTML" ? f = p : f.appendChild(p);
    else {
      if (!ae && !ie && !Y && // eslint-disable-next-line unicorn/prefer-includes
      d.indexOf("<") === -1)
        return $ && Oe ? $.createHTML(d) : d;
      if (f = m(d), !f)
        return ae ? null : Oe ? ne : "";
    }
    f && Ge && L(f.firstChild);
    const w = ue(le ? d : f);
    for (; R = w.nextNode(); )
      At(R), g(R), R.content instanceof E && Dt(R.content);
    if (le)
      return d;
    if (ae) {
      if (Ce)
        for (h = ve.call(f.ownerDocument); f.firstChild; )
          h.appendChild(f.firstChild);
      else
        h = f;
      return (x.shadowroot || x.shadowrootmode) && (h = Se.call(l, h, !0)), h;
    }
    let F = Y ? f.outerHTML : f.innerHTML;
    return Y && D["!doctype"] && f.ownerDocument && f.ownerDocument.doctype && f.ownerDocument.doctype.name && z(er, f.ownerDocument.doctype.name) && (F = "<!DOCTYPE " + f.ownerDocument.doctype.name + `>
` + F), ie && vt([Ne, Re, we], (B) => {
      F = Qe(F, B, " ");
    }), $ && Oe ? $.createHTML(F) : F;
  }, i.setConfig = function() {
    let d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    je(d), he = !0;
  }, i.clearConfig = function() {
    fe = null, he = !1;
  }, i.isValidAttribute = function(d, n, f) {
    fe || je({});
    const p = M(d), R = M(n);
    return Ve(p, R, f);
  }, i.addHook = function(d, n) {
    typeof n == "function" && Je(P[d], n);
  }, i.removeHook = function(d, n) {
    if (n !== void 0) {
      const f = sr(P[d], n);
      return f === -1 ? void 0 : fr(P[d], f, 1)[0];
    }
    return Gt(P[d]);
  }, i.removeHooks = function(d) {
    P[d] = [];
  }, i.removeAllHooks = function() {
    P = Vt();
  }, i;
}
var Zt = tr();
const V = {
  select(o) {
    return {
      count(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        if (i) {
          let l = 0;
          return i === "*" ? l = e.reduce((c, E) => c + E.children.length, 0) : e.forEach((c) => {
            l += c.querySelectorAll(i).length;
          }), e = null, l;
        } else {
          console.error("No target provided to count!");
          return;
        }
      },
      sum(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        if (i) {
          let l = 0, c;
          return i === "*" ? e.forEach((E) => {
            c = Array.from(E.children), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l += isNaN(S) ? 0 : S;
            });
          }) : e.forEach((E) => {
            c = E.querySelectorAll(i), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l += isNaN(S) ? 0 : S;
            });
          }), c = null, e = null, l;
        } else {
          console.error("No target provided to sum!");
          return;
        }
      },
      avg(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        if (i) {
          let l = 0, c = 0, E;
          return i === "*" ? e.forEach((_) => {
            E = Array.from(_.children), E.forEach((S) => {
              const H = parseFloat(S.innerText);
              l += isNaN(H) ? 0 : H, c++;
            });
          }) : e.forEach((_) => {
            E = _.querySelectorAll(i), E.forEach((S) => {
              const H = parseFloat(S.innerText);
              l += isNaN(H) ? 0 : H, c++;
            });
          }), E = null, e = null, c > 0 ? l / c : 0;
        } else {
          console.error("No target provided to average!");
          return;
        }
      },
      min(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        if (i) {
          let l = 1 / 0, c;
          return i === "*" ? e.forEach((E) => {
            c = Array.from(E.children), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l = Math.min(l, isNaN(S) ? 1 / 0 : S);
            });
          }) : e.forEach((E) => {
            c = E.querySelectorAll(i), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l = Math.min(l, isNaN(S) ? 1 / 0 : S);
            });
          }), c = null, e = null, l === 1 / 0 ? null : l;
        } else {
          console.error("No target provided to minimum!");
          return;
        }
      },
      max(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        if (i) {
          let l = -1 / 0, c;
          return i === "*" ? e.forEach((E) => {
            c = Array.from(E.children), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l = Math.max(l, isNaN(S) ? -1 / 0 : S);
            });
          }) : e.forEach((E) => {
            c = E.querySelectorAll(i), c.forEach((_) => {
              const S = parseFloat(_.innerText);
              l = Math.max(l, isNaN(S) ? -1 / 0 : S);
            });
          }), c = null, e = null, l === -1 / 0 ? null : l;
        } else {
          console.error("No target provided to maximum!");
          return;
        }
      }
    };
  },
  insert(o) {
    return {
      into(i) {
        let e;
        if (i) {
          if (e = document.querySelectorAll(i), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${i} selector!`);
            return;
          }
          e.forEach((l) => {
            l.innerHTML += Zt.sanitize(o);
          });
        } else {
          console.error("No selector provided!");
          return;
        }
        e = null;
      }
    };
  },
  update(o) {
    return {
      set(i) {
        let e;
        if (o) {
          if (e = document.querySelectorAll(o), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${o} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        typeof i == "object" ? Object.entries(i).forEach((l) => {
          const [c, E] = l;
          if (c === "text") {
            e.forEach((_) => {
              _.innerText = E;
            });
            return;
          }
          if (c === "html") {
            e.forEach((_) => {
              _.innerHTML = Zt.sanitize(E);
            });
            return;
          }
          e.forEach((_) => {
            _.style[c] = E;
          });
        }) : console.error(i !== void 0 ? "Invalid content type! Expected object!" : "No content provided to update!"), e = null;
      }
    };
  },
  delete(o) {
    return {
      from(i) {
        let e;
        if (i) {
          if (e = document.querySelectorAll(i), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${i} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        !o || o === "*" ? e.forEach((l) => {
          l.innerHTML = "";
        }) : e.forEach((l) => {
          let c = l.querySelectorAll(o);
          if (c = c.length === 0 ? c : Array.from(c), !c.length) {
            console.error(`No child element with ${o} selector!`);
            return;
          }
          c.forEach((E) => {
            E.innerHTML = "";
          }), c = null;
        }), e = null;
      }
    };
  },
  drop(o) {
    let i;
    if (o) {
      if (i = document.querySelectorAll(o), i = i.length === 0 ? i : Array.from(i), !i.length) {
        console.error(`No element with ${o} selector!`);
        return;
      }
      i.forEach((e) => {
        e.remove();
      });
    } else {
      console.error("No selector provided!");
      return;
    }
    i = null;
  },
  createTrigger(o) {
    return {
      on(i) {
        let e;
        if (i) {
          if (e = document.querySelectorAll(i), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${i} selector!`);
            return;
          }
        } else {
          console.error("No selector provided!");
          return;
        }
        return {
          execute(l) {
            e.forEach((c) => {
              c.addEventListener(o, l);
            }), e = null;
          }
        };
      }
    };
  },
  executeTrigger(o) {
    return {
      on(i) {
        let e;
        if (i) {
          if (e = document.querySelectorAll(i), e = e.length === 0 ? e : Array.from(e), !e.length) {
            console.error(`No element with ${i} selector!`);
            return;
          }
          e.forEach((l) => {
            let c = new Event(o);
            l.dispatchEvent(c), c = null;
          });
        } else {
          console.error("No selector provided!");
          return;
        }
        e = null;
      }
    };
  }
};
function Nt(o) {
  switch (o.type) {
    case "SELECT":
      switch (o.func) {
        case "COUNT":
          return V.select(o.from).count(o.target);
        case "SUM":
          return V.select(o.from).sum(o.target);
        case "AVG":
          return V.select(o.from).avg(o.target);
        case "MIN":
          return V.select(o.from).min(o.target);
        case "MAX":
          return V.select(o.from).max(o.target);
        default:
          throw new Error("Unknown function: " + o.func);
      }
    case "INSERT":
      let i;
      return typeof o.values == "string" ? i = o.values : i = Nt(o.values[1]), V.insert(i).into(o.target);
    case "UPDATE":
      const e = {};
      for (const c of o.entries) {
        let E = c.value;
        typeof E != "string" && (E = Nt(E[1])), e[c.property] = E;
      }
      return V.update(o.target).set(e);
    case "DELETE":
      return V.delete(o.target).from(o.from);
    case "DROP":
      return V.drop(o.target);
    case "CREATE_TRIGGER":
      const l = () => Nt(o.statement);
      return V.createTrigger(o.event).on(o.target).execute(l);
    case "EXECUTE_TRIGGER":
      return V.executeTrigger(o.event).on(o.target);
    default:
      throw new Error("Unknown AST node type: " + o.type);
  }
}
document.addEventListener("DOMContentLoaded", () => {
  (async () => {
    const o = document.querySelectorAll('script[type="text/qdom"]');
    for (const i of o) {
      let e = "";
      if (i.src ? e = await (await fetch(i.src)).text() : e = i.textContent, !e) {
        console.error("No code found in script tag!");
        return;
      }
      e = e.split(`
`).map((l) => l.trim()).filter((l) => l.length > 0);
      for (const l of e) {
        const c = or(l);
        Nt(c);
      }
    }
  })();
});
